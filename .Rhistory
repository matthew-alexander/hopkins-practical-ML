library(caret)
library(rpart)
library(randomForest)
setwd("~/GitHub/hopkins-practical-ML")
train <- read.csv("pml-training.csv",  na.strings=c("NA","#DIV/0!",""))
test <- read.csv("pml-testing.csv",  na.strings=c("NA","#DIV/0!",""))
names(train)
summary(train$classe)
# the classe variable is the one to predict on
carlitos = subset(data, user_name == "carlitos")
table(carlitos$classe)
transform(carlitos, classe=factor(classe))
# data cleaning
key_columns <- c(7:11, 37:49, 60:68, 84:86, 102, 113:124, 151:159, 160)
train_small <- train[,key_columns]
test_small <- test[,key_columns]
test_small
library(caret)
library(rpart)
library(randomForest)
setwd("~/GitHub/hopkins-practical-ML")
train <- read.csv("pml-training.csv",  na.strings=c("NA","#DIV/0!",""))
test <- read.csv("pml-testing.csv",  na.strings=c("NA","#DIV/0!",""))
names(train)
summary(train$classe)
library(caTools)
set.seed(2000)
split = sample.split(train$classe, SplitRatio = 0.6)
train = subset(train, split == TRUE)
validation = subset(train, split == FALSE)
key_columns <- c(7:11, 37:49, 60:68, 84:86, 102, 113:124, 151:159, 160)
train_small <- train[,key_columns]
validation_small <- validation[,key_columns]
test_small <- test[,key_columns]
tree <- rpart(classe ~ ., data=train_small, method="class")
predictions_tree <- predict(tree, validation_small, type = "class")
predictions_tree
table(validation_small$classe, predictions_tree)
confusionMatrix(validation_small$classe, predictions_tree)
rf <- randomForest(classe ~ ., data=train_small, ntree = 200)
predictions_rf <- predict(rf, validation_small)
confusionMatrix(validation_small$classe, predictions_rf)
PredictROC = predict(rf, newdata = test_small)
PredictROC
pred = prediction(PredictROC[, 2], validation_small$classe)
library(ROCR)
install.packages(ROCR)
install.packages("ROCR")
library(ROCR)
PredictROC = predict(rf, newdata = test_small)
PredictROC
pred = prediction(PredictROC[, 2], validation_small$classe)
PredictROC = predict(rf, newdata = validation_small)
PredictROC
pred = prediction(PredictROC[, 2], validation_small$classe)
perf = performance(pred, "tpr", "fpr")
PredictROC = predict(rf, validation_small)
PredictROC
rf <- randomForest(classe ~ ., data=train_small, ntree = 200)
predictions_rf <- predict(rf, validation_small)
confusionMatrix(validation_small$classe, predictions_rf)
predictions_rf
predictions_rf[2]
predictions_rf[,2]
PredictROC = predict(rf, validation_small)
PredictROC
pred = prediction(PredictROC, validation_small$classe)
perf = performance(PredictROC, "tpr", "fpr")
plot(perf)
PredictROC = predict(rf, validation_small)
PredictROC = predict(rf, validation_small)
confusionMatrix(validation_small$classe, predictions_tree)
predictions_rf <- predict(rf, test_small)
predictions_rf_test <- predict(rf, test_small)
predictions_rf_test
confusionMatrix(validation_small$classe, predictions_tree)
confusionMatrix(validation_small$classe, predictions_tree)
k = confusionMatrix(predictions_tree, validation_small)
confusionMatrix(predictions_tree,validation_small$classe)
length(validation_small$classe)
length(predictions_tree)
dim(validation_small$classe)
dim(validation_small)
table(validation_small$classe, predictions_tree)
table(predictions_tree,validation_small$classe)
getTree(rf, 1, labelVar=TRUE)
